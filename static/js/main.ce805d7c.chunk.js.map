{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/test/LifeCycle.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","Link","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","onDeleteClick","_ref","delete","t0","_x","_x2","showContactInfo","_this2","_this$props$contact","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","preventDefault","_this$state","newContact","post","then","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","abrupt","match","params","put","_this3","About","LifeCycle","test","title","body","fetch","response","json","NotFound","App","context_Provider","HashRouter","basename","process","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sQAKMA,EAAS,SAACC,GAAU,IACfC,EAAWD,EAAXC,SACT,OAQEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAAKL,GACtCC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,IAAIH,UAAU,YACvBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADb,SAKFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,eAAeH,UAAU,YAClCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADb,QAKFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,SAASH,UAAU,YAC5BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBADb,eAchBN,EAAOU,aAAc,CACjBR,SAAU,UAUd,IAKeF,8DC5DTW,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACpB,OAAOA,EAAOC,MACV,IAAK,iBACL,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACOH,EADP,CAEIK,SAAUL,EAAMK,SAASC,OAAO,SAACC,GAAD,OAChCA,EAAQC,KAAOP,EAAOQ,YAE1B,IAAK,cACL,OAAAN,OAAAC,EAAA,EAAAD,CAAA,GACOH,EADP,CAEIK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACL,OAAAF,OAAAC,EAAA,EAAAD,CAAA,GACOH,EADP,CAEIK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAChCA,EAAQC,KAAOP,EAAOQ,QAAQD,GAE5BD,EAAUN,EAAOQ,QAAUF,MAGrC,QACG,OAAOP,IAILa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACItB,MAAM,CACFK,SAAS,GAqBTwB,SAAU,SAAA5B,GACNe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAxBlDe,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAhD,EAAAiD,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAhD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAqCsBC,IACjBC,IAAI,8CAtCT,OAqCUN,EArCVE,EAAAK,KAuCI7B,KAAKY,SAAS,CAACzB,SAAUmC,EAAIQ,OAvCjC,wBAAAN,EAAAO,SAAAV,EAAArB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WA6CI,OACI9C,EAAAC,EAAAC,cAACM,EAAQiB,SAAT,CAAkBqB,MAAQhB,KAAKlB,OAC1BkB,KAAKhC,MAAMgE,cA/CxBrC,EAAA,CAA8BsC,aAqDjBC,EAAWxD,EAAQwD,SCyCjBC,cAtHb,SAAAA,IAAa,IAAArC,EAAA,OAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAmC,IACXrC,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,KAAAf,OAAAuB,EAAA,EAAAvB,CAAAkD,GAAA1B,KAAAT,QAkCFoC,cAnCa,eAAAC,EAAApD,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAhD,EAAAiD,KAmCG,SAAAC,EAAQ/B,EAAIqB,GAAZ,OAAAQ,EAAAhD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENC,IACRW,OADQ,8CAAA9C,OAC6CF,IAHvC,OAIdqB,EAAS,CAAC3B,KAAM,iBAAkBO,QAASD,IAJ7BkC,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAe,GAAAf,EAAA,SAMZb,EAAS,CAAC3B,KAAM,iBAAkBO,QAASD,IAN/B,wBAAAkC,EAAAO,SAAAV,EAAArB,KAAA,YAnCH,gBAAAwC,EAAAC,GAAA,OAAAJ,EAAA3B,MAAAV,KAAAE,YAAA,GAEXJ,EAAKhB,MAAQ,CACX4D,iBAAiB,GAHR5C,wEA8CJ,IAAA6C,EAAA3C,KAAA4C,EAE2B5C,KAAKhC,MAAMqB,QAArCwD,EAFDD,EAECC,KAAMC,EAFPF,EAEOE,MAAOC,EAFdH,EAEcG,MAAOzD,EAFrBsD,EAEqBtD,GACnBoD,EAAmB1C,KAAKlB,MAAxB4D,gBAET,OAEExE,EAAAC,EAAAC,cAAC8D,EAAD,KACG,SAAAlB,GAAQ,IACAL,EAAYK,EAAZL,SACP,OACMzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACfH,EAAAC,EAAAC,cAAA,UACCyE,EAKD3E,EAAAC,EAAAC,cAAA,KAAG4E,QAAS,WACVL,EAAK/B,SAAS,CAAE8B,iBAAkBA,KAEpCrE,UAAU,mBAAmB4E,MAAO,CAACC,OAAO,aAE5ChF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAe4E,MAAO,CAACC,OAAO,UAC3CC,MAAM,QAASC,MAAM,OACrBJ,QAAUL,EAAKP,cAAciB,KAAKV,EAAMrD,EAAIqB,KAE5CzC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAE,gBAAAgB,OAAkBF,IACxBpB,EAAAC,EAAAC,cAAA,KACAC,UAAU,oBAAoB4E,MAAQ,CACpCC,OAAO,UACPC,MAAO,QACPC,MAAM,QACNE,YAAa,YAKhBZ,EAAmBxE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAChCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,WAAyCyE,GACzC5E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,WAAyC0E,IACnC,eAxFFd,aC4GPsB,mLA5CX,OACIrF,EAAAC,EAAAC,cAAC8D,EAAD,KACK,SAAAlB,GAAS,IACC7B,EAAW6B,EAAX7B,SACP,OACAjB,EAAAC,EAAAC,cAACF,EAAAC,EAAMqF,SAAP,KACItF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACVH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,WADJ,SAGHc,EAASO,IAAI,SAACL,GAAD,OAEVnB,EAAAC,EAAAC,cAACqF,EAAD,CACI1C,IAAM1B,EAAQC,GACdD,QAAWA,gBAjFZ4C,8CCCjByB,EAAgB,SAAArB,GAWhB,IAVFsB,EAUEtB,EAVFsB,MACAd,EASER,EATFQ,KACA7B,EAQEqB,EARFrB,MACA4C,EAOEvB,EAPFuB,YACA5E,EAMEqD,EANFrD,KACA6E,EAKExB,EALFwB,SACAC,EAIEzB,EAJFyB,MAKF,OACE5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAO2F,QAASlB,GAAOc,GACvBzF,EAAAC,EAAAC,cAAA,SAAOY,KAAMA,EACb6D,KAAOA,EAKPxE,UAAY2F,IAAW,+BAAgC,CACnDC,aAAcH,IAIlBF,YAAaA,EACb5C,MAAOA,EAEP6C,SAAWA,IAGVC,GAAS5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoByF,KAiBrDJ,EAAejF,aAAe,CAC1BO,KAAM,QAGK0E,QCmHAQ,6MArKXpF,MAAO,CACH+D,KAAM,GACNC,MAAO,GACPC,MAAO,GACPoB,OAAQ,MAOZN,SAAU,SAACO,GAAD,OAAKtE,EAAKc,SAAL3B,OAAAoF,EAAA,EAAApF,CAAA,GAAgBmF,EAAEE,OAAOzB,KAAOuB,EAAEE,OAAOtD,WAGxDuD,SAAW,SAAC5D,EAAUyD,GAClBA,EAAEI,iBADqB,IAAAC,EAII3E,EAAKhB,MAA3B+D,EAJkB4B,EAIlB5B,KAAMC,EAJY2B,EAIZ3B,MAAOC,EAJK0B,EAIL1B,MAGlB,GAAY,KAATF,EAIH,GAAa,KAAVC,EAIH,GAAa,KAAVC,EAAH,CAKI,IAAI2B,EAAY,CAEZ7B,OACAC,QACAC,SASJpB,IAAMgD,KAAK,6CACXD,GACCE,KAAK,SAAAtD,GAAG,OAAIX,EAAS,CAAC3B,KAAK,cAAeO,QAAS+B,EAAIQ,SAaxDhC,EAAKc,SAAS,CACViC,KAAK,GACLC,MAAM,GACNC,MAAM,GACNoB,OAAO,KAGXrE,EAAK9B,MAAM6G,QAAQC,KAAK,UAvCxBhF,EAAKc,SAAS,CAACuD,OAAS,CAACpB,MAAO,4BAJhCjD,EAAKc,SAAS,CAACuD,OAAS,CAACrB,MAAO,4BAJhChD,EAAKc,SAAS,CAACuD,OAAS,CAACtB,KAAM,+FAoDhC,IAAAF,EAAA3C,KAAA+E,EACgC/E,KAAKlB,MAAnC+D,EADFkC,EACElC,KAAMC,EADRiC,EACQjC,MAAOC,EADfgC,EACehC,MAAOoB,EADtBY,EACsBZ,OAE3B,OACIjG,EAAAC,EAAAC,cAAC8D,EAAD,KACK,SAAAlB,GAAQ,IACEL,EAAYK,EAAZL,SACP,OACAzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACzBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMmG,SAAU5B,EAAK4B,SAASlB,KAAKV,EAAMhC,IACjCzC,EAAAC,EAAAC,cAAC4G,EAAD,CACIrB,MAAM,OACNd,KAAO,OACPe,YAAc,gBACd5C,MAAQ6B,EACRgB,SAAYlB,EAAKkB,SACjBC,MAASK,EAAOtB,OAgBpB3E,EAAAC,EAAAC,cAAC4G,EAAD,CACIrB,MAAM,QACNd,KAAO,QACP7D,KAAO,QACP4E,YAAc,iBACd5C,MAAQ8B,EACRe,SAAYlB,EAAKkB,SACjBC,MAASK,EAAOrB,QAcxB5E,EAAAC,EAAAC,cAAC4G,EAAD,CACQrB,MAAM,QACNd,KAAO,QACPe,YAAc,iBACd5C,MAAQ+B,EACRc,SAAYlB,EAAKkB,SACjBC,MAASK,EAAOpB,QAcxB7E,EAAAC,EAAAC,cAAA,SAAOY,KAAK,SAASgC,MAAM,cAC3B3C,UAAU,wCAxJD4D,aCmIVgD,6MAjIXnG,MAAO,CACH+D,KAAM,GACNC,MAAO,GACPC,MAAO,GACPoB,OAAQ,MAmBZN,SAAU,SAACO,GAAD,OAAKtE,EAAKc,SAAL3B,OAAAoF,EAAA,EAAApF,CAAA,GAAgBmF,EAAEE,OAAOzB,KAAOuB,EAAEE,OAAOtD,WAGxDuD,+CAAY,SAAAlD,EAAMV,EAAUyD,GAAhB,IAAAK,EAAA5B,EAAAC,EAAAC,EAAAmC,EAAA5F,EAAAgC,EAAA,OAAAH,EAAAhD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACR0C,EAAEI,iBADMC,EAImB3E,EAAKhB,MAA3B+D,EAJG4B,EAIH5B,KAAMC,EAJH2B,EAIG3B,MAAOC,EAJV0B,EAIU1B,MAGN,KAATF,EAPK,CAAArB,EAAAE,KAAA,eAQJ5B,EAAKc,SAAS,CAACuD,OAAS,CAACtB,KAAM,sBAR3BrB,EAAA2D,OAAA,oBAWK,KAAVrC,EAXK,CAAAtB,EAAAE,KAAA,eAYJ5B,EAAKc,SAAS,CAACuD,OAAS,CAACrB,MAAO,uBAZ5BtB,EAAA2D,OAAA,oBAeK,KAAVpC,EAfK,CAAAvB,EAAAE,KAAA,gBAgBJ5B,EAAKc,SAAS,CAACuD,OAAS,CAACpB,MAAO,uBAhB5BvB,EAAA2D,OAAA,yBAoBJD,EAAY,CACZrC,OACAC,QACAC,SAICzD,EAAMQ,EAAK9B,MAAMoH,MAAMC,OAAvB/F,GA3BGkC,EAAAE,KAAA,GA6BUC,IACb2D,IADa,8CAAA9F,OACqCF,GACnD4F,GA/BI,QA6BF5D,EA7BEE,EAAAK,KAiCJlB,EAAS,CAAC3B,KAAK,iBAAkBO,QAAS+B,EAAIQ,OAK9ChC,EAAKc,SAAS,CACViC,KAAK,GACLC,MAAM,GACNC,MAAM,GACNoB,OAAO,KAGXrE,EAAK9B,MAAM6G,QAAQC,KAAK,KA7CpB,yBAAAtD,EAAAO,SAAAV,EAAArB,oJAjBO,IAAA2C,EAAA3C,KACRV,EAAMU,KAAKhC,MAAMoH,MAAMC,OAAvB/F,GACPqC,IAAMC,IAAN,8CAAApC,OAAwDF,IACvDsF,KAAK,SAAAtD,GAAG,OAAIqB,EAAK/B,SAAS,CACvBiC,KAAMvB,EAAIQ,KAAKe,KACfC,MAAMxB,EAAIQ,KAAKgB,MACfC,MAAOzB,EAAIQ,KAAKgB,2CA6DjB,IAAAyC,EAAAvF,KAAA+E,EACgC/E,KAAKlB,MAAnC+D,EADFkC,EACElC,KAAMC,EADRiC,EACQjC,MAAOC,EADfgC,EACehC,MAAOoB,EADtBY,EACsBZ,OAE3B,OACIjG,EAAAC,EAAAC,cAAC8D,EAAD,KACK,SAAAlB,GAAQ,IACEL,EAAYK,EAAZL,SACP,OACAzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACzBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMmG,SAAUgB,EAAKhB,SAASlB,KAAKkC,EAAM5E,IACjCzC,EAAAC,EAAAC,cAAC4G,EAAD,CACIrB,MAAM,OACNd,KAAO,OACPe,YAAc,gBACd5C,MAAQ6B,EACRgB,SAAY0B,EAAK1B,SACjBC,MAASK,EAAOtB,OAEpB3E,EAAAC,EAAAC,cAAC4G,EAAD,CACIrB,MAAM,QACNd,KAAO,QACP7D,KAAO,QACP4E,YAAc,iBACd5C,MAAQ8B,EACRe,SAAY0B,EAAK1B,SACjBC,MAASK,EAAOrB,QAExB5E,EAAAC,EAAAC,cAAC4G,EAAD,CACQrB,MAAM,QACNd,KAAO,QACPe,YAAc,iBACd5C,MAAQ+B,EACRc,SAAY0B,EAAK1B,SACjBC,MAASK,EAAOpB,QAExB7E,EAAAC,EAAAC,cAAA,SAAOY,KAAK,SAASgC,MAAM,iBAC3B3C,UAAU,wCApHA4D,aCJXuD,EAAA,SAACxH,GAEd,OACEE,EAAAC,EAAAC,cAAA,WAGEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,yBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,wBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,oBCoDSoH,6MA1DX3G,MAAO,CACH4G,KAAM,OACNC,MAAO,GACPC,KAAK,uFAGU,IAAAjD,EAAA3C,KAEf6F,MAAM,gDACDjB,KAAK,SAAAkB,GAAQ,OAAIA,EAASC,SAC1BnB,KAAK,SAAA9C,GAAI,OAAIa,EAAK/B,SAAS,CACxB+E,MAAM7D,EAAK6D,MACXC,KAAM9D,EAAK8D,0CAmChB,IAAAnB,EACiBzE,KAAKlB,MAApB6G,EADFlB,EACEkB,MAAOC,EADTnB,EACSmB,KAChB,OACE1H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKuH,GACLzH,EAAAC,EAAAC,cAAA,SAAIwH,WAtDY3D,aCAT+D,EAAA,WACb,OACE9H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,uBAI1BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,2EC+ES4H,mLAzCX,OACE/H,EAAAC,EAAAC,cAAC8H,EAAD,KAEEhI,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAQC,SAAWC,kBACnBnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAACkI,EAAD,CAAQrI,SAAU,oBAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpD,IACjCrF,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWzC,IAC5ChG,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAW1B,IAEjD/G,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWnB,IACtCtH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWlB,IAErCvH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAOC,OAAK,EAACE,UAAWX,gBAzClB/D,aCTE2E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3B,MACvB,2DCZN4B,IAASC,OAAO/I,EAAAC,EAAAC,cAAC8I,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3C,KAAK,SAAA4C,GACjCA,EAAaC","file":"static/js/main.ce805d7c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Header = (props) => {\r\n    const {branding} =props\r\n  return (\r\n    // <div>\r\n    //   {/* STYLING */}\r\n    //   {/* <h1 style={{color: 'red', fontSize: '50px'}}>{branding}</h1> */}\r\n    //   {/* <h1 style ={headingStyle}>{branding}</h1> */}\r\n    //   <h1>{branding}</h1>\r\n    //   {/* <h1>{props.branding}</h1> */}\r\n    // </div>\r\n    <nav className=\"navbar navbar-expand-sm \r\n    navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"/\">{branding}</a>\r\n          <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"></i>\r\n                Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"></i>\r\n                Add\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"></i>\r\n                About\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\n\r\n//This will display, even if we don't get a props passed in//\r\nHeader.defaultProps ={\r\n    branding: 'My App'\r\n};\r\n\r\n//Protypes is used to validate the data coming in\r\n//wheter its a string, object or interger\r\nHeader.propTypes ={\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nconst headingStyle ={\r\n  color: 'green', \r\n  fontSize: '50px'\r\n}\r\n\r\nexport default Header;\r\n ","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) =>{\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts: state.contacts.filter((contact) => \r\n            contact.id !== action.payload)\r\n        };\r\n        case 'ADD_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts: [action.payload, ...state.contacts]\r\n        };\r\n        case 'UPDATE_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts: state.contacts.map(contact =>\r\n                contact.id === action.payload.id \r\n                //if/else\r\n                ?(contact = action.payload) :contact\r\n                )\r\n        };\r\n        default:\r\n           return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state={\r\n        contacts:[\r\n            // {\r\n            //     id:1,\r\n            //     name:'Sean Don',\r\n            //     email: 'seandon@gmail.com',\r\n            //     phone:'555-555-555'\r\n            // },\r\n            // {\r\n            //     id:2,\r\n            //     name:'Bukun Josep',\r\n            //     email: 'bukun@gmail.com',\r\n            //     phone:'222-222-222'\r\n            // },\r\n            // {\r\n            //     id:3,\r\n            //     name:'Henry Ianu',\r\n            //     email: 'HIanu@gmail.com',\r\n            //     phone:'333-333-333'\r\n            // }\r\n        ],\r\n\r\n        dispatch: action =>{\r\n            this.setState(state => reducer(state, action))\r\n        },    \r\n    };\r\n\r\n//   componentDidMount(){\r\n//       axios.get('https://jsonplaceholder.typicode.com/users')\r\n//       .then(res => this.setState({\r\n//           contacts: res.data\r\n//       }));\r\n//    }\r\n\r\n//USING ASYN AWAIT \r\n   async componentDidMount(){\r\n    const res = await axios\r\n    .get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState({contacts: res.data});\r\n }\r\n\r\n    \r\n\r\n  render() {\r\n    return (\r\n        <Context.Provider value ={this.state}>\r\n            {this.props.children}\r\n        </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import './contact.css';\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios'\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass Contact extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      showContactInfo: false,\r\n    };\r\n\r\n    // this.onShowClick =this.onShowClick.bind(this);\r\n  };\r\n\r\n  //Another way to access this from our methods\r\n  //this method below wouldn't need the .bind(this) setup\r\n\r\n  //Keeping the setState in the Click method\r\n  // onShowClick = () =>{\r\n  //   this.setState({ showContactInfo: !this.state.showContactInfo});\r\n  // };\r\n\r\n\r\n  // onShowClick(){\r\n  //   console.log(this.state)\r\n  // }\r\n\r\n  // //Receiving the paramter passed from the event\r\n  // onShowClick = (namee, e) =>{\r\n  //   console.log(namee)\r\n  // }\r\n\r\n  /*onDeleteClick =( id, dispatch) =>{\r\n    // this.props.deleteClickHandler();\r\n\r\n    axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n    .then(() => dispatch({type: 'DELETE_CONTACT', payload: id})) ; \r\n  }; */\r\n\r\n  //USING ASYN AWAIT \r\n  onDeleteClick = async ( id, dispatch) =>{\r\n    try {\r\n      await axios\r\n   .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n    dispatch({type: 'DELETE_CONTACT', payload: id})\r\n    } catch (error) {\r\n      dispatch({type: 'DELETE_CONTACT', payload: id})\r\n    }  \r\n  };\r\n\r\n\r\n  render() {\r\n      // const{name, email, phone} =this.props\r\n      const{name, email, phone, id } =this.props.contact;\r\n      const {showContactInfo} = this.state;\r\n\r\n    return (\r\n\r\n      <Consumer>\r\n        {value =>{\r\n          const {dispatch} = value;\r\n          return (\r\n                <div className=\"card card-body mb-3\">\r\n                <h4>\r\n                {name} \r\n                {/* <i onClick={this.onShowClick.bind(this)} */}\r\n                {/* Passing a paramter throug h the event\r\n                <i onClick={this.onShowClick.bind(this, name)} */}\r\n                {/* <i onClick={this.onShowClick} */}\r\n                <i onClick={()=>{\r\n                  this.setState({ showContactInfo: !showContactInfo});\r\n                }}\r\n                className=\"fas fa-sort-down\" style={{cursor:'pointer'}}>\r\n                </i>\r\n                <i className=\"fas fa-times\" style={{cursor:'pointer', \r\n                float:'right', color:'red'}}\r\n                onClick ={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i \r\n                  className=\"fas fa-pencil-alt\" style ={{\r\n                    cursor:'pointer',\r\n                    float: 'right',\r\n                    color:'black',\r\n                    marginRight: '1rem'\r\n                  }}>\r\n                  </i>\r\n                </Link>\r\n                </h4>\r\n                {showContactInfo ? (<ul className=\"list-group\">\r\n                  <li className=\"list-group-item\"> Email: {email}</li>\r\n                  <li className=\"list-group-item\"> Phone: {phone}</li>\r\n                </ul>) :null}\r\n                          \r\n                {/* <h4>{this.props.name}</h4>\r\n                <ul>\r\n                  <li>{this.props.email}</li>\r\n                  <li>{this.props.phone}</li>\r\n                </ul> */}\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\n//Protypes is used to validate the \r\n//data coming in wheter its a string, \r\n//object, interger, boolean\r\nContact.propTypes ={\r\n    // name: PropTypes.string.isRequired,\r\n    // email: PropTypes.string.isRequired,\r\n    // phone: PropTypes.string.isRequired,\r\n    //number: PropTypes.number.isRequired,\r\n    //array: PropTypes.array.isRequired,\r\n    //boolean: PropTypes.bool.isRequired\r\n    contact: PropTypes.object.isRequired,\r\n    // deleteClickHandler: PropTypes.func.isRequired,  \r\n};\r\n\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport {Consumer} from '../../context';\r\n\r\nclass Contacts extends Component {\r\n    // constructor(){\r\n    //     super();\r\n    //     this.state = {\r\n    //         contacts:[\r\n    //             {\r\n    //                 id:1,\r\n    //                 name:'Sean Don',\r\n    //                 email: 'seandon@gmail.com',\r\n    //                 phone:'555-555-555'\r\n    //             },\r\n    //             {\r\n    //                 id:2,\r\n    //                 name:'Bukun Josep',\r\n    //                 email: 'bukun@gmail.com',\r\n    //                 phone:'222-222-222'\r\n    //             },\r\n    //             {\r\n    //                 id:3,\r\n    //                 name:'Henry Ianu',\r\n    //                 email: 'HIanu@gmail.com',\r\n    //                 phone:'333-333-333'\r\n    //             }\r\n    //         ]\r\n    //     }\r\n    // }\r\n    \r\n    // state = {\r\n    //     contacts:[\r\n    //         {\r\n    //             id:1,\r\n    //             name:'Sean Don',\r\n    //             email: 'seandon@gmail.com',\r\n    //             phone:'555-555-555'\r\n    //         },\r\n    //         {\r\n    //             id:2,\r\n    //             name:'Bukun Josep',\r\n    //             email: 'bukun@gmail.com',\r\n    //             phone:'222-222-222'\r\n    //         },\r\n    //         {\r\n    //             id:3,\r\n    //             name:'Henry Ianu',\r\n    //             email: 'HIanu@gmail.com',\r\n    //             phone:'333-333-333'\r\n    //         }\r\n    //     ]\r\n    // };\r\n    // We actually don't need constructor in this case\r\n    // constructor can be needed for other reasons like \r\n    // initialization then we can do it the way above! \r\n    // But if we only using constructor to create our state \r\n    // we don't have to do that. We can simply state out the state\r\n\r\n    // deleteContact =id =>{\r\n    //     const {contacts} = this.state;\r\n\r\n    //     const newContacts = contacts.filter((contact) =>{\r\n    //        return contact.id !== id;\r\n    //     })\r\n\r\n    //     this.setState({\r\n    //         contacts: newContacts\r\n    //     })\r\n    // }\r\n  render() {\r\n\r\n    return(\r\n        <Consumer>\r\n            {value => {\r\n                const{ contacts} =value;\r\n                return (\r\n                <React.Fragment>\r\n                    <h1 className=\"display-4 mb-2\">\r\n                        <span className=\"text-danger\">Contact</span> List\r\n                    </h1>\r\n                {contacts.map((contact) => (\r\n                    // <h1>{contact.name}</h1>\r\n                    <Contact   \r\n                        key= {contact.id}\r\n                        contact = {contact}\r\n                        // deleteClickHandler ={this.deleteContact.bind(this, contact.id)}\r\n                        // name = {contact.name} \r\n                        // email={contact.email} \r\n                        // phone={contact.phone} \r\n                    />\r\n                ))}\r\n                </React.Fragment>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n    //   const {contacts} =this.state;\r\n    // return (\r\n    // //   <React.Fragment>\r\n    // //     {contacts.map((contact) => (\r\n    // //         // <h1>{contact.name}</h1>\r\n    // //         <Contact   \r\n    // //             key= {contact.id}\r\n    // //             contact = {contact}\r\n    // //             deleteClickHandler ={this.deleteContact.bind(this, contact.id)}\r\n    // //             // name = {contact.name} \r\n    // //             // email={contact.email} \r\n    // //             // phone={contact.phone} \r\n    // //         />\r\n    // //      ))}\r\n    // //   </React.Fragment>\r\n    // )\r\n  }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames'\r\n\r\n\r\nconst TextInputGroup =({\r\n    label,\r\n    name,\r\n    value, \r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n\r\n    // OR And we could have just said (props) and then calls them out\r\n    // by props.type or props.value\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input type={type} \r\n        name ={name}\r\n        //the classnames() will take in first the class we \r\n        //want to apply by default AND the second is going to\r\n        // have the class name we want and the condition it\r\n        //depends on\r\n        className= {classnames('form-control form-control-lg', {\r\n            'is-invalid': error\r\n        })}\r\n        // className=\" is-invalid form-control \r\n        // form-control-lg\"\r\n        placeholder={placeholder}\r\n        value={value}\r\n        // onChange ={this.onNameChange}\r\n        onChange ={onChange}\r\n\r\n        />\r\n        {error && <div className=\"invalid-feedback\">{error}\r\n        </div>}\r\n        \r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes ={\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text',\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n\r\n    state ={\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    // onNameChange =(e)=>this.setState({name: e.target.value});\r\n    // onEmailChange =(e)=>this.setState({email: e.target.value});\r\n    // onPhoneChange =(e)=>this.setState({phone: e.target.value});\r\n\r\n    onChange =(e)=>this.setState({[e.target.name]: e.target.value});\r\n    //target.name = to the name values in eact input\r\n\r\n    onSubmit = (dispatch, e) =>{\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n\r\n        let {name, email, phone} = this.state;\r\n\r\n        //Check for Errors\r\n        if(name === ''){\r\n            this.setState({errors : {name: 'Name is required'}});\r\n            return;\r\n        }\r\n        if(email === ''){\r\n            this.setState({errors : {email: 'Email is required'}});\r\n            return;\r\n        }\r\n        if(phone === ''){\r\n            this.setState({errors : {phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n            let newContact ={\r\n                // name: name, if the key value is the same, we don't need to put both\r\n                name,\r\n                email,\r\n                phone,\r\n                // To grab a unique id import uuid \"npm i uuid\"\r\n                // id: uuid(),\r\n                //wouldn't need this because Jsonplaceholder already \r\n                //created id for each data\r\n            };\r\n\r\n            // dispatch({type:'ADD_CONTACT', payload: newContact})\r\n           \r\n            axios.post('https://jsonplaceholder.typicode.com/users', \r\n            newContact)\r\n            .then(res => dispatch({type:'ADD_CONTACT', payload: res.data }))\r\n            \r\n\r\n            //USING ASYN AWAIT: async should be added before the \r\n            // paramter above onSubmit = async (dispatch, e) =>{}\r\n            /*\r\n            const res = await axios\r\n            .post('https://jsonplaceholder.typicode.com/users', \r\n            newContact);\r\n            dispatch({type:'ADD_CONTACT', payload: res.data });\r\n            */\r\n        \r\n            //Clear State\r\n            this.setState({\r\n                name:'',\r\n                email:'',\r\n                phone:'',\r\n                errors:{}\r\n            });\r\n            //Redirect: Redirecting to the HomePage\r\n            this.props.history.push('/');\r\n        \r\n    };\r\n\r\n\r\n  render() {\r\n      const {name, email, phone, errors} = this.state;\r\n\r\n      return(\r\n          <Consumer>\r\n              {value =>{\r\n                  const {dispatch} = value;\r\n                  return(\r\n                  <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Add Contact</div> \r\n        <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup \r\n                        label='Name'\r\n                        name = 'name'\r\n                        placeholder = \"Enter Name...\"\r\n                        value= {name}\r\n                        onChange = {this.onChange}\r\n                        error = {errors.name}\r\n                    />\r\n\r\n                {/* <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type=\"text\" \r\n                    name =\"name\"\r\n                    className=\"form-control \r\n                    form-control-lg\"\r\n                    placeholder=\"Enter Name....\"\r\n                    value={name}\r\n                    // onChange ={this.onNameChange}\r\n                    onChange ={this.onChange}\r\n                    />\r\n                </div> */}\r\n\r\n                    <TextInputGroup \r\n                        label='Email'\r\n                        name = 'email'\r\n                        type = 'email'\r\n                        placeholder = \"Enter Email...\"\r\n                        value= {email}\r\n                        onChange = {this.onChange}\r\n                        error = {errors.email}\r\n                    />\r\n                {/* <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" \r\n                    name =\"email\"\r\n                    className=\"form-control \r\n                    form-control-lg\"\r\n                    placeholder=\"Enter Email....\"\r\n                    value ={email}\r\n                    // onChange ={this.onEmailChange}\r\n                    onChange ={this.onChange}\r\n                    />\r\n                </div> */}\r\n                <TextInputGroup \r\n                        label='Phone'\r\n                        name = 'phone' \r\n                        placeholder = \"Enter Phone...\"\r\n                        value= {phone}\r\n                        onChange = {this.onChange}\r\n                        error = {errors.phone}\r\n                    />\r\n                {/* <div className=\"form-group\">\r\n                    <label htmlFor=\"phone\">Phone</label>\r\n                    <input type=\"text\" \r\n                    name =\"phone\"\r\n                    className=\"form-control \r\n                    form-control-lg\"\r\n                    placeholder=\"Enter Phone....\"\r\n                    value={phone}\r\n                    // onChange ={this.onPhoneChange}\r\n                    onChange ={this.onChange}\r\n                    />\r\n                </div> */}\r\n                <input type=\"submit\" value=\"Add Contact\" \r\n                className=\"btn btn-light btn-block\"/>\r\n                \r\n            </form>\r\n            \r\n\r\n        </div>\r\n      </div>  \r\n                  );\r\n              }}\r\n\r\n          </Consumer>\r\n      );\r\n  }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n\r\n    state ={\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {},\r\n        \r\n    };\r\n\r\n    //fetching the data of the ID and updating the state\r\n    componentDidMount(){\r\n        const {id} = this.props.match.params\r\n        axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        .then(res => this.setState({\r\n            name: res.data.name,\r\n            email:res.data.email,\r\n            phone: res.data.email,\r\n        }))\r\n    }\r\n\r\n    // onNameChange =(e)=>this.setState({name: e.target.value});\r\n    // onEmailChange =(e)=>this.setState({email: e.target.value});\r\n    // onPhoneChange =(e)=>this.setState({phone: e.target.value});\r\n\r\n    onChange =(e)=>this.setState({[e.target.name]: e.target.value});\r\n    //target.name = to the name values in eact input\r\n\r\n    onSubmit =  async(dispatch, e) =>{\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n\r\n        let {name, email, phone} = this.state;\r\n\r\n        //Check for Errors\r\n        if(name === ''){\r\n            this.setState({errors : {name: 'Name is required'}});\r\n            return;\r\n        }\r\n        if(email === ''){\r\n            this.setState({errors : {email: 'Email is required'}});\r\n            return;\r\n        }\r\n        if(phone === ''){\r\n            this.setState({errors : {phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n        let updContact ={\r\n            name,\r\n            email,\r\n            phone,\r\n        }\r\n\r\n        //Put request updating the \r\n        let {id} = this.props.match.params;\r\n\r\n        const res = await axios\r\n            .put(`https://jsonplaceholder.typicode.com/users/${id}`,\r\n            updContact);\r\n\r\n            dispatch({type:'UPDATE_CONTACT', payload: res.data});\r\n\r\n\r\n \r\n            //Clear State\r\n            this.setState({\r\n                name:'',\r\n                email:'',\r\n                phone:'',\r\n                errors:{}\r\n            });\r\n            //Redirect: Redirecting to the HomePage\r\n            this.props.history.push('/');\r\n        \r\n    };\r\n\r\n\r\n  render() {\r\n      const {name, email, phone, errors} = this.state;\r\n\r\n      return(\r\n          <Consumer>\r\n              {value =>{\r\n                  const {dispatch} = value;\r\n                  return(\r\n                  <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Edit Contact</div> \r\n        <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup \r\n                        label='Name'\r\n                        name = 'name'\r\n                        placeholder = \"Enter Name...\"\r\n                        value= {name}\r\n                        onChange = {this.onChange}\r\n                        error = {errors.name}\r\n                    />\r\n                    <TextInputGroup \r\n                        label='Email'\r\n                        name = 'email'\r\n                        type = 'email'\r\n                        placeholder = \"Enter Email...\"\r\n                        value= {email}\r\n                        onChange = {this.onChange}\r\n                        error = {errors.email}\r\n                    />\r\n                <TextInputGroup \r\n                        label='Phone'\r\n                        name = 'phone' \r\n                        placeholder = \"Enter Phone...\"\r\n                        value= {phone}\r\n                        onChange = {this.onChange}\r\n                        error = {errors.phone}\r\n                    />\r\n                <input type=\"submit\" value=\"Update Contact\" \r\n                className=\"btn btn-light btn-block\"/>\r\n                \r\n            </form>\r\n            \r\n\r\n        </div>\r\n      </div>  \r\n                  );\r\n              }}\r\n\r\n          </Consumer>\r\n      );\r\n  }\r\n}\r\n\r\nexport default EditContact;","import React from 'react'\r\n\r\nexport default (props) => {\r\n  // let {params} = props.match\r\n  return (  \r\n    <div>\r\n      {/* <h1 className='display-4'>{props.match.params.id}</h1> */}\r\n      {/* <h1 className='display-4'>{params.id}</h1> */}\r\n      <h1 className='display-4'>About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage</p>\r\n      <p className=\"text-secondary\">Version  1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass LifeCycle extends Component {\r\n\r\n    state ={\r\n        test: 'test',\r\n        title: '',\r\n        body:''\r\n    };\r\n\r\n    componentDidMount(){\r\n        // console.log('componentDidMount...')\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                title:data.title,\r\n                body: data.body\r\n            }))\r\n    }\r\n    \r\n    // //This runs before DidMount()\r\n    // componentWillMount(){\r\n    //     console.log('componentWillMount...')\r\n    // }\r\n\r\n    // componentDidUpdate(){\r\n    //     console.log('componentDidUpdate...');\r\n    // }\r\n\r\n    // componentWillUpdate(){\r\n    //     console.log('componentWillUpdate...');\r\n    // }\r\n\r\n\r\n    // componentWillReceiveProps(nextProps, nextState){\r\n    //     console.log('RecievedProps..')\r\n    // }\r\n\r\n    // //New way to us this cycle\r\n    // UNSAFE_componentWillReceiveProps(nextProps, nextState){\r\n    //     console.log('RecievedProps..')\r\n    // }\r\n\r\n    // static getDerivedStateFromProps(nextProps, prevState){\r\n    //     return null;\r\n\r\n    // }\r\n\r\n    // getSnapshotBeforeUpdate(prevProps, prevState){\r\n    //     console.log('getSnapshotBeforeUpdate....')\r\n    // }\r\n  render() {\r\n      const {title, body} = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LifeCycle;\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">\r\n      404 Page Not Found\r\n      </span>\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\n// import Contact from './components/Contact';\nimport Header from './components/layout/Header';\nimport Contacts from './components/contacts/Contacts'\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport LifeCycle from './components/test/LifeCycle';\nimport NotFound from './components/pages/NotFound';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\nimport { Provider } from './context';\n\n///import router\n// import { BrowserRouter as Router, Route, Switch } \n// from 'react-router-dom';\nimport { HashRouter as Router, Route, Switch } \nfrom 'react-router-dom';\n\n\nclass App extends Component {\n  render() {\n\n    //without JSX \n    // return React.createElement(\n    //   'div',\n    //   {className: 'App'},\n    //   React.createElement('h1', null, 'The App Component')\n    // );\n\n    // let name = 'LArry';\n    // let showHello = false;\n    // let showMath = true;\n    // let num1 = 40;\n    // let num2 = 23;\n\n    // let math;\n    // let val;\n    // if(showMath){\n    //   math = <h3>5 + 5 = {5 + 5}</h3>\n    //   val = <h3>{num1} + {num2} = {num1 + num2}</h3>\n    // }else{\n    //   math= null;\n    //   val = null;\n    // }\n   \n    return (\n      <Provider>\n        {/* <Router basename ={process.env.PUBLIC_URL}> */}\n        <Router basename ={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n         <Header branding= \"Contact Manager\"/>  \n         <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={Contacts} />\n            <Route exact path=\"/contact/add\" component={AddContact} />\n            <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n            {/* <Route exact path=\"/about/:id\" component={About} /> */}\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/test\" component={LifeCycle} />\n\n            <Route exact component={NotFound} />\n\n          </Switch>\n            {/* <AddContact />\n            <Contacts/> */}\n            {/* <Contact name=\"Sean Don\" \n            email=\"seandon@gmail.com\" phone=\"333-333-333\" />\n            <Contact name=\"Bukun folami\" \n            email=\"bukunfor@gmail.com\" phone=\"333-555-367\" /> */}\n         </div>\n         \n\n         {/* <h4>Hello {name.toUpperCase()}</h4>\n         <h4>1 + 1 = {1 + 1}</h4>\n         {showHello ? <h3>2 + 2 = {2 + 2}</h3> :null}\n         {math}\n         {val}\n         <label htmlFor=\"name\">Name</label>\n         <input type=\"text\"/> */}\n        </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}